Return-Path: <linux-btrfs-owner@vger.kernel.org>
X-Original-To: lists+linux-btrfs@lfdr.de
Delivered-To: lists+linux-btrfs@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 62EEE5991B3
	for <lists+linux-btrfs@lfdr.de>; Fri, 19 Aug 2022 02:24:07 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S240905AbiHSAXA (ORCPT <rfc822;lists+linux-btrfs@lfdr.de>);
        Thu, 18 Aug 2022 20:23:00 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:44210 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S232055AbiHSAW7 (ORCPT
        <rfc822;linux-btrfs@vger.kernel.org>);
        Thu, 18 Aug 2022 20:22:59 -0400
Received: from box.fidei.email (box.fidei.email [71.19.144.250])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id B9B67CE328;
        Thu, 18 Aug 2022 17:22:56 -0700 (PDT)
Received: from authenticated-user (box.fidei.email [71.19.144.250])
        (using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits))
        (No client certificate requested)
        by box.fidei.email (Postfix) with ESMTPSA id 8A7BF8037B;
        Thu, 18 Aug 2022 20:22:54 -0400 (EDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=dorminy.me; s=mail;
        t=1660868575; bh=KJO8iwxrW0bVho80KCGrZkmxDyezgyXHpsErpPzQgHE=;
        h=Date:Subject:To:Cc:References:From:In-Reply-To:From;
        b=N+93TpP6Li6o7H2ac0bwSroqd6xtkc3b8IAQyozKaUpO5jlWrOrQR4JbA8TX/Rk3P
         2qvGPQAIsTsC/v6YF9aK2M69TAcpoB/bwehlvSBaWBRsRuN8w0V273S8I0upw7c6UF
         1D38AQq3HG+C/nMsR7aQn9OtWj8E233WIB1xHUr+fC9CLptMe/VwyVEDoFhu+fL8oV
         rG03UPzMkgiMHlaVroeEVAIHKUUATNc38CeR47WdlvfwS7EQ8B5pfLH0IU2DYFgnpu
         z/ycNTPggm32sTYMwlrXNAeTJhfY6MiOhDVUbpo4maLdQi5nWu2ElRhCSmx9E11DCr
         edOAGKmJ0MERg==
Message-ID: <80a2e21a-0835-6a7e-d8b6-9c1ca4ae157c@dorminy.me>
Date:   Thu, 18 Aug 2022 20:22:53 -0400
MIME-Version: 1.0
Subject: Re: [PATCH 05/21] fscrypt: add new encryption policy for btrfs.
Content-Language: en-US
To:     Eric Biggers <ebiggers@kernel.org>
Cc:     Chris Mason <clm@fb.com>, Josef Bacik <josef@toxicpanda.com>,
        David Sterba <dsterba@suse.com>,
        "Theodore Y . Ts'o" <tytso@mit.edu>,
        Jaegeuk Kim <jaegeuk@kernel.org>,
        linux-fscrypt@vger.kernel.org, linux-btrfs@vger.kernel.org,
        kernel-team@fb.com
References: <cover.1660744500.git.sweettea-kernel@dorminy.me>
 <66fcd64620c0c0711bbe80aa85e92f04d539bd83.1660744500.git.sweettea-kernel@dorminy.me>
 <89d9ff01-c405-ec25-736a-bfba4c03e72c@dorminy.me>
 <Yv64LMFQjs081n3Z@sol.localdomain>
From:   Sweet Tea Dorminy <sweettea-kernel@dorminy.me>
In-Reply-To: <Yv64LMFQjs081n3Z@sol.localdomain>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam-Status: No, score=-2.1 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,SPF_HELO_PASS,SPF_PASS,
        T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-btrfs.vger.kernel.org>
X-Mailing-List: linux-btrfs@vger.kernel.org



On 8/18/22 18:07, Eric Biggers wrote:
> On Wed, Aug 17, 2022 at 11:54:56AM -0400, Sweet Tea Dorminy wrote:
>>
>>
>> On 8/17/22 10:49, Sweet Tea Dorminy wrote:
>>> Encryption for btrfs must be extent-based, rather than fscrypt's
>>> inode-based IV generation policies.  In particular, btrfs can have
>>> multiple inodes referencing a single block of data, and moves logical
>>> data blocks to different physical locations on disk; these two features
>>> mean inode or physical-location-based IV generation policies will not
>>> work for btrfs. Instead, btrfs can store an IV per extent, generated by
>>> fscrypt and iterated per block within the extent, and provide that IV to
>>> fscrypt for encryption/decryption.
>>>
>>> Plumbing filesystem internals into fscrypt for IV generation would be
>>> ungainly and fragile. Thus, this change adds a new policy, IV_FROM_FS,
>>> and a new operation function pointer, get_fs_derived_iv.  btrfs will
>>> require this policy to be used, and implements get_fs_derived_iv by
>>> getting the IV stored with the relevant file extent and iterating the IV
>>> to the appropriate block number. Thus, each individual block has its own
>>> IV, but all blocks within a file extent have iterated IVs according to
>>> their block number, similarly to the IV_INO_LBLK* policy iterating IVs
>>> for a given inode by lblk number.
>>>
>>> The IV buffer passed to get_fs_derived_iv() is pre-populated with the
>>> inode contexts' nonce, as not all data to be encrypted is associated
>>> with a file extent: for btrfs, this is used for filename encryption.
>>>
>>> Filesystems implementing this policy are expected to be incompatible
>>> with existing IV generation policies, so if the function pointer is set,
>>> only dummy or IV_FROM_FS policies are permitted. If there is a
>>> filesystem which allows other policies as well as IV_FROM_FS, it may be
>>> better to expose the policy to filesystems, so they can determine
>>> whether any given policy is compatible with their operation.
>>>
>>> Signed-off-by: Sweet Tea Dorminy <sweettea-kernel@dorminy.me>
>>> ---
>>
>> I realized after sending that this doesn't have Documentation/ updates for
>> the new policy, still; apologies, and it remains on my queue.
> 
> It looks like you also didn't address my feedback about IV_FROM_FS at
> https://lore.kernel.org/linux-fscrypt/YuBAiRg9K8IrlCqV@gmail.com ?

Apologies; I must not have grasped what you were requesting fully. 
Should I change the name from IV_FROM_FS to IV_PER_EXTENT?
